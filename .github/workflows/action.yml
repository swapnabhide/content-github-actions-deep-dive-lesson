name: deploy lambda function

on:
  push:
    branches: 
      - main

jobs:
  lint: 
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: set up python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: install linting libraries
        run: |
          cd function
          pip install flake8
      - name: Lint with Flake8
        run: |
          # Select identifies which errors should cause the job to fail
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # The exit zero flag will show errors as warnings and not fail the run
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  build: 
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: set up python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: install libraries
        run: |
          cd function
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt -t.; fi
      - name: create zip bundle
        run: |
          cd function
          zip -r ../${{ github.sha }}.zip .
      - name: archive the artifact
        uses: actions/upload-artifact@v4
        with:
          name: zipped-bundle
          path: ${{ github.sha }}.zip
  upload:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: zipped-bundle
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Upload to S3
        run: aws s3 cp ${{ github.sha }}.zip s3://my-bucket-u8kk2khv2/${{ github.sha }}.zip
  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Upload function Code
        run: |
          aws lambda update-function-code \
            --function-name my-function \
            --s3-bucket my-bucket-u8kk2khv2 \
            --s3-key ${{ github.sha }}.zip \
            --publish
  test:
    runs-on: ubuntu-latest
    needs: upload
    strategy:
      matrix:
        input: ["Hello", "Hi"]
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Create test function
        run: |  
          aws lambda create-function --function-name test-function-${{ matrix.input }} \
            --code S3Bucket=my-bucket-u8kk2khv2,S3Key=${{ github.sha }}.zip \
            --handler lambda_function.lambda_handler --runtime python3.9 \
            --role arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/my-lambda-role
      - name: Invoke test function
        run: |
          aws lambda invoke --function-name test-function-${{ matrix.input }} \
            --payload $( echo "{\"input\": \"${{ matrix.input }}\"}" | base64) \
            --output json --outfile out
          if grep -q "Error" out; then
            exit1
          fi
      - name: Wait 10 seconds  
        run: sleep 10  
      - name: Destroy test function  
        if: ${{ always() }}  
        run: aws lambda delete-function --function-name test-function-${{ matrix.input }}
    
